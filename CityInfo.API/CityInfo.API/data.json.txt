{
	info {
		_postman_id 6d3b2bfd-85f3-41e6-8a97-71cf04c5d421,
		name ASP.NET Core 6 Web API Fundamentals,
		schema httpsschema.getpostman.comjsoncollectionv2.1.0collection.json
	},
	item [
		{
			name GET Cities,
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicities,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities
					]
				}
			},
			response []
		},
		{
			name GET City,
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicities1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1
					]
				}
			},
			response []
		},
		{
			name GET Points of Interest,
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicities1pointsofinterest,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1,
						pointsofinterest
					]
				}
			},
			response []
		},
		{
			name GET Points of Interest (unexisting City),
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicities4pointsofinterest,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						4,
						pointsofinterest
					]
				},
				description Should return 404 NotFound
			},
			response []
		},
		{
			name GET Point of Interest,
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicities1pointsofinterest1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1,
						pointsofinterest,
						1
					]
				}
			},
			response []
		},
		{
			name GET Point of Interest (unexisting City),
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicities4pointsofinterest1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						4,
						pointsofinterest,
						1
					]
				},
				description Should return 404 NotFound
			},
			response []
		},
		{
			name GET Point of Interest (unexisting Point of Interest),
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicities1pointsofinterest10,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1,
						pointsofinterest,
						10
					]
				},
				description Should return 404 NotFound
			},
			response []
		},
		{
			name GET Cities (XML),
			request {
				method GET,
				header [
					{
						key Accept,
						value applicationxml
					}
				],
				url {
					raw httpslocalhost{{portNumber}}apicities,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities
					]
				}
			},
			response []
		},
		{
			name GET File,
			request {
				method GET,
				header [
					{
						key Accept,
						value applicationxml
					}
				],
				url {
					raw httpslocalhost{{portNumber}}apifiles1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						files,
						1
					]
				}
			},
			response []
		},
		{
			name POST Point of Interest,
			request {
				method POST,
				header [
					{
						key Content-Type,
						value applicationjson
					}
				],
				body {
					mode raw,
					raw {n    name PÃ¨re Lachaise,n    description Famous cemetery where Jim Morrison and Oscar Wilde are buried.n}
				},
				url {
					raw httpslocalhost{{portNumber}}apicities3pointsofinterest,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						3,
						pointsofinterest
					]
				}
			},
			response []
		},
		{
			name POST Point of Interest (can't deserialize),
			request {
				method POST,
				header [
					{
						key Content-Type,
						value applicationjson
					}
				],
				body {
					mode raw,
					raw 
				},
				url {
					raw httpslocalhost{{portNumber}}apicities3pointsofinterest,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						3,
						pointsofinterest
					]
				}
			},
			response []
		},
		{
			name POST Point of Interest (missing name, long description),
			request {
				method POST,
				header [
					{
						key Content-Type,
						value applicationjson
					}
				],
				body {
					mode raw,
					raw {n    invalidProperty 1,n    description Scallywag holystone landlubber or just lubber yardarm tackle Shiver me timbers cog heave down provost Admiral of the Black. Hornswaggle spanker man-of-war yo-ho-ho mutiny splice the main brace jack keelhaul fire ship Corsair. Bounty prow walk the plank lugsail port loot pirate bilge jib scuppers.  Sutler lee matey sloop plunder splice the main brace interloper Yellow Jack maroon quarter. Draft Privateer run a shot across the bow chandler gaff broadside Pirate Round jolly boat skysail bilge. Chandler mutiny careen execution dock splice the main brace bring a spring upon her cable lass run a rig grog blossom smartly.  Gangplank Davy Jones' Locker plunder overhaul draught pinnace blow the man down bring a spring upon her cable no prey, no pay keel. Gold Road gaff grapple sutler scurvy aft bilge come about coffer gunwalls. Scuttle list Davy Jones' Locker pinnace chase trysail draught Pirate Round Jolly Roger log.n}n
				},
				url {
					raw httpslocalhost{{portNumber}}apicities3pointsofinterest,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						3,
						pointsofinterest
					]
				}
			},
			response []
		},
		{
			name PUT Point of Interest,
			request {
				method PUT,
				header [
					{
						key Content-Type,
						value applicationjson
					}
				],
				body {
					mode raw,
					raw {n    name Updated - Central Park,n    description Updated - The most visited urban park in the United States.n}
				},
				url {
					raw httpslocalhost{{portNumber}}apicities1pointsofinterest1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1,
						pointsofinterest,
						1
					]
				}
			},
			response []
		},
		{
			name PUT Point of Interest (no description),
			request {
				method PUT,
				header [
					{
						key Content-Type,
						value applicationjson
					}
				],
				body {
					mode raw,
					raw {n    name Updated again - Central Parkn}
				},
				url {
					raw httpslocalhost{{portNumber}}apicities1pointsofinterest1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1,
						pointsofinterest,
						1
					]
				}
			},
			response []
		},
		{
			name PATCH Point of Interest,
			request {
				method PATCH,
				header [
					{
						key Content-Type,
						value applicationjson
					}
				],
				body {
					mode raw,
					raw [n    {n      op replace,n      path name,n      value Updated - Central Parkn    }n]
				},
				url {
					raw httpslocalhost{{portNumber}}apicities1pointsofinterest1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1,
						pointsofinterest,
						1
					]
				}
			},
			response []
		},
		{
			name PATCH Point of Interest (update multiple),
			request {
				method PATCH,
				header [
					{
						key Content-Type,
						value applicationjson
					}
				],
				body {
					mode raw,
					raw [n    {n      op replace,n      path name,n      value Updated - Central Parkn    },n    {n      op replace,n      path description,n      value Updated - Descriptionn    }n]
				},
				url {
					raw httpslocalhost{{portNumber}}apicities1pointsofinterest1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1,
						pointsofinterest,
						1
					]
				}
			},
			response []
		},
		{
			name PATCH Point of Interest (invalid property),
			request {
				method PATCH,
				header [
					{
						key Content-Type,
						value applicationjson
					}
				],
				body {
					mode raw,
					raw [n    {n      op replace,n      path invalidproperty,n      value Updated - Central Parkn    }n]
				},
				url {
					raw httpslocalhost{{portNumber}}apicities1pointsofinterest1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1,
						pointsofinterest,
						1
					]
				}
			},
			response []
		},
		{
			name PATCH Point of Interest (remove name),
			request {
				method PATCH,
				header [
					{
						key Content-Type,
						value applicationjson
					}
				],
				body {
					mode raw,
					raw [n    {n      op remove,n      path namen    }n]
				},
				url {
					raw httpslocalhost{{portNumber}}apicities1pointsofinterest1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1,
						pointsofinterest,
						1
					]
				}
			},
			response []
		},
		{
			name DELETE Point of Interest,
			request {
				method DELETE,
				header [],
				body {
					mode raw,
					raw 
				},
				url {
					raw httpslocalhost{{portNumber}}apicities1pointsofinterest1,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities,
						1,
						pointsofinterest,
						1
					]
				}
			},
			response []
		},
		{
			name GET Cities, filtered,
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicitiesname=Antwerp,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities
					],
					query [
						{
							key name,
							value Antwerp
						}
					]
				}
			},
			response []
		},
		{
			name GET Cities, searched,
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicitiessearchQuery=the,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities
					],
					query [
						{
							key searchQuery,
							value the
						}
					]
				}
			},
			response []
		},
		{
			name GET Cities, filtered, searched,
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicitiesname=Antwerp&searchQuery=the,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities
					],
					query [
						{
							key name,
							value Antwerp
						},
						{
							key searchQuery,
							value the
						}
					]
				}
			},
			response []
		},
		{
			name GET Cities, paged,
			request {
				method GET,
				header [],
				url {
					raw httpslocalhost{{portNumber}}apicitiespageSize=1&pageNumber=2,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						cities
					],
					query [
						{
							key pageSize,
							value 1
						},
						{
							key pageNumber,
							value 2
						}
					]
				}
			},
			response []
		},
		{
			name POST Authentication info to get a token,
			request {
				method POST,
				header [],
				body {
					mode raw,
					raw {rn    username KevinDockx,rn    password This is a relatively long sentence that acts as my passwordrn},
					options {
						raw {
							language json
						}
					}
				},
				url {
					raw httpslocalhost{{portNumber}}apiauthenticationauthenticate,
					protocol https,
					host [
						localhost
					],
					port {{portNumber}},
					path [
						api,
						authentication,
						authenticate
					]
				}
			},
			response []
		}
	]
}